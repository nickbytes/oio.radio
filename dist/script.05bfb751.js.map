{"version":3,"sources":["script.js"],"names":["on","document","addEventListener","event","refresh","counter","giphy","giphyURL","getElementById","encodeURI","newGif","fetch","then","res","json","out","renderGif","data","catch","err","_giphy","querySelector","style","backgroundImage","image_original_url","refreshRate","clearInterval","setInterval","static"],"mappings":";;;AAIA,aAJA,IAAA,EAAA,EAAA,QAAA,iBAIA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFA,IAAMA,GAAK,EAEXC,SAASC,iBAAiB,mBAAoB,SAASC,GAE/CC,IAAAA,EACAC,EAAU,EAIXC,EACI,iCADJA,EAEG,mCAFHA,EAGA,SAHAA,EAIC,SAJDA,EAKG,QAKLC,GAFcN,SAASO,eAAe,YAE3BC,UACdH,EACCA,EACA,YACAA,EACA,QACAA,EACA,WACAA,IAGKI,EAAS,WACTC,MAAMJ,GACLK,KAAK,SAAAC,GAAOA,OAAAA,EAAIC,SAChBF,KAAK,SAACG,GACHC,EAAUD,EAAIE,QAEjBC,MAAM,SAAAC,GAAeA,MAAAA,KAIzBH,EAAY,SAAAI,GAEfnB,SAASoB,cAAc,YAAYC,MAAMC,gBAAmB,QAAUH,EAAOI,mBAAqB,KAGlGC,KAIGA,EAAc,WAEjBC,cAActB,GACdA,EAAUuB,YAAY,aACZtB,EAEc,GAAK,EACfK,IAEAT,SAASoB,cAAc,YAAYC,MAAMC,gBAAmB,QAAaK,GAAAA,OAAAA,EAAb,SAAwB,MAnDlF,MAuDb5B,GAEHU","file":"script.05bfb751.js","sourceRoot":"../src","sourcesContent":["import static from \"./static.gif\"\n\nconst on = false\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\t// Initiate gifLoop for set interval\n    var refresh;\n    let counter = 0\n\t// Duration count in seconds\n\tconst duration = 1000 * 5;\n\t// Giphy API defaults\n\tconst giphy = {\n\t\tbaseURL: \"https://api.giphy.com/v1/gifs/\",\n\t\tapiKey: \"q2YzkzhfEzjpkMNrvF5vQP2d8gWQ6rZF\",\n\t\ttag: \"trippy\",\n\t\ttype: \"random\",\n\t\trating: \"pg-13\"\n\t};\n\t// Target gif-wrap container\n\tconst $gif_wrap = document.getElementById(\"gif-wrap\");\n\t// Giphy API URL\n\tlet giphyURL = encodeURI(\n\t\tgiphy.baseURL +\n\t\t\tgiphy.type +\n\t\t\t\"?api_key=\" +\n\t\t\tgiphy.apiKey +\n\t\t\t\"&tag=\" +\n\t\t\tgiphy.tag +\n\t\t\t\"&rating=\" +\n\t\t\tgiphy.rating\n\t);\t\n\n    let newGif = () => {\n        fetch(giphyURL)\n        .then(res => res.json())\n        .then((out) => {\n            renderGif(out.data);        \n            })\n        .catch(err => { throw err });\n        }\n\n\t// Display Gif in gif wrap container\n\tvar renderGif = _giphy => {\t\t\n\t\t// Set gif as bg image\n\t\tdocument.querySelector(\".channel\").style.backgroundImage =  \"url('\" + _giphy.image_original_url + \"')\"\n\t\t\n\t\t// Start duration countdown\n\t\trefreshRate();\n\t};\n\n\t// Call for new gif after duration\n\tvar refreshRate = () => {\n\t\t// Reset set intervals\n\t\tclearInterval(refresh);\n\t\trefresh = setInterval(function() {  \n            counter++          \n            // Call Giphy API for new gif\n            if (counter % 2 == 0) \n                newGif();            \n            else         \n                document.querySelector(\".channel\").style.backgroundImage =  \"url('\" + `${static}` + \"')\"\n\t\t}, duration);\n\t};\n\n\tif (on) \n\t// Call Giphy API for new gif\n\t\tnewGif();\n\t\n\t\n\t// const newGifButton = document.getElementById('new-gif');\n\t\n\t// newGifButton.onclick = newGif\n});\n"]}