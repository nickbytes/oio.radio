{"version":3,"sources":["script.js"],"names":["keys","on","counter","document","addEventListener","event","refresh","giphy","newGif","key","length","giphyURL","encodeURI","fetch","then","res","json","out","renderGif","data","catch","err","_giphy","querySelector","style","backgroundImage","image_original_url","refreshRate","clearInterval","setInterval","static"],"mappings":";;;AAeA,aALA,IAAA,EAAA,EAAA,QAAA,iBAKA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAfA,IAAMA,EAAO,CACZ,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,oCAKKC,GAAK,EACPC,EAAU,EAEdC,SAASC,iBAAiB,mBAAoB,SAASC,GAE/CC,IAAAA,EAIDC,EACI,iCADJA,GAEGP,EAAKE,GACR,UAHAK,EAIC,SAJDA,EAKG,QAGFC,EAAS,WACXC,IAAAA,EAAMT,EAAKE,EAAQF,EAAKU,QACxBC,EAAWC,UACdL,EACCA,EACA,YACAE,EACA,QACAF,EACA,WACAA,GAGIM,MAAMF,GACLG,KAAK,SAAAC,GAAOA,OAAAA,EAAIC,SAChBF,KAAK,SAACG,GACHC,EAAUD,EAAIE,QAEjBC,MAAM,SAAAC,GAAeA,MAAAA,KAIzBH,EAAY,SAAAI,GAEfnB,SAASoB,cAAc,YAAYC,MAAMC,gBAAmB,QAAUH,EAAOI,mBAAqB,KAGlGC,KAIGA,EAAc,WAEjBC,cAActB,GACdA,EAAUuB,YAAY,aACZ3B,EAEc,GAAK,EACfM,IAEAL,SAASoB,cAAc,YAAYC,MAAMC,gBAAmB,QAAaK,GAAAA,OAAAA,EAAb,SAAwB,MAlDlF,MAsDb7B,GAEHO","file":"script.fa7a6358.js","sourceRoot":"../src","sourcesContent":["const keys = [\n\t\"q2YzkzhfEzjpkMNrvF5vQP2d8gWQ6rZF\",\n\t\"cqIxo6l4eeaYMkLcZPGJnQdMoP5V4zWT\",\n\t\"44OyxHJgyRmAz4FCyp9IQf4gMafvSlNR\",\n\t\"j7BL2bRNpiil1re1QorRGdrx2fdAUl1M\",\n\t\"YTLay1ZytLqLwfPq3spUAtA0dddPjlBi\",\n\t\"ukNYGeEVE3lvQjxZglDghcifIOyKCCHc\",\n\t\"5MFUOWfllMf4uBQSdt9EU5h3GfA5bTl2\",\n]\n\nimport static from \"./static.gif\"\n\nconst on = true\nlet counter = 0\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\t// Initiate gifLoop for set interval\n    var refresh;    \n\t// Duration count in seconds\n\tconst duration = 1000 * 5;\n\t// Giphy API defaults\n\tconst giphy = {\n\t\tbaseURL: \"https://api.giphy.com/v1/gifs/\",\n\t\tapiKey: keys[counter],\n\t\ttag: \"colors\",\n\t\ttype: \"random\",\n\t\trating: \"pg-13\"\n\t};\t\t\n\n    let newGif = () => {\n\t\tlet key = keys[counter%keys.length]\t\t\n\t\tlet giphyURL = encodeURI(\n\t\t\tgiphy.baseURL +\n\t\t\t\tgiphy.type +\n\t\t\t\t\"?api_key=\" +\n\t\t\t\tkey +\n\t\t\t\t\"&tag=\" +\n\t\t\t\tgiphy.tag +\n\t\t\t\t\"&rating=\" +\n\t\t\t\tgiphy.rating\n\t\t);\n\n        fetch(giphyURL)\n        .then(res => res.json())\n        .then((out) => {\n            renderGif(out.data);        \n            })\n        .catch(err => { throw err });\n    }\n\n\t// Display Gif in gif wrap container\n\tvar renderGif = _giphy => {\t\t\n\t\t// Set gif as bg image\n\t\tdocument.querySelector(\".channel\").style.backgroundImage =  \"url('\" + _giphy.image_original_url + \"')\"\n\t\t\n\t\t// Start duration countdown\n\t\trefreshRate();\n\t};\n\n\t// Call for new gif after duration\n\tvar refreshRate = () => {\n\t\t// Reset set intervals\n\t\tclearInterval(refresh);\n\t\trefresh = setInterval(function() {  \n            counter++          \n            // Call Giphy API for new gif\n            if (counter % 2 == 0) \n                newGif();            \n            else         \n                document.querySelector(\".channel\").style.backgroundImage =  \"url('\" + `${static}` + \"')\"\n\t\t}, duration);\n\t};\n\n\tif (on) \n\t\t// Call Giphy API for new gif\n\t\tnewGif();\n\t\t\n});\n"]}